
struct my_struct
{

	float3 palette(float t)
	{
		float3 a = float3(0.5, 0.5, 0.5);
		float3 b = float3(0.5, 0.5, 0.5);
		float3 c = float3(1.0, 1.0, 1.0);
		float3 d = float3(0.263, 0.416, 0.557);

		return a + b * cos(6.28318 * (c * t + d));
	}
	
};

my_struct FUNC;

	 uv = uv * 2.0-1;
	float2 uv0 = uv;
	float3 finalColor = Color;


	for (float i = 0.0; i < Step; i++)
	{
		
		if(ABC)
		{
			uv = frac(uv * Step) - 0.5;
		}
		else
		{
			uv = frac(uv * 1.5) - 0.5;
		}

		float d = length(uv) * exp(-length(uv0));

		float3 col =FUNC.palette(length(uv0) + i * 0.4 + Time * 0.4);

		d = sin(d * 10.0 + Time) / 8.0;
		d = abs(d);

		d = pow(0.01 / d, 1.2);

		finalColor += col * d;
		
	}

return float4(finalColor, 1.0);
